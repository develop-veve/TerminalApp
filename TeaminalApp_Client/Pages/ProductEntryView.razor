@page "/product-entry-view"
@inject HttpClient Http
@using TerminalApp_Shared.Models

<h3>実績参照</h3>

@if (ProductResults == null || !ProductResults.Any())
{
        <p>データがありません。</p>
}
else
{
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>生産品ID</th>
                    <th>生産品名</th>
                    <th>製品タイプ</th>
                    <th>増減タイプ</th>
                    <th>数量</th>
                    <th>登録日</th>
                    <th>更新日</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var product in ProductResults)
            {
                        <tr>
                            <td>@product.Id</td>
                            <td>@product.ProductId</td>
                            <td>@product.ProductName</td>
                            <td>@product.ProductType</td>
                            <td>@product.AdjustmentType</td>
                            <td>@product.Quantity</td>
                            <td>@product.CreateTimestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                            <td>@product.UpdateTimestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        </tr>
            }
            </tbody>
        </table>
}

@code {
    private List<ProductResult> ProductResults { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // サーバーからデータ取得
            ProductResults = await Http.GetFromJsonAsync<List<ProductResult>>("api/product/getall");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"エラー: {ex.Message}");
        }
    }
}
